[
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "Compare The Relative Danger of Two Boroughs over the Time Periods 2021 and 2022.\n\n\nComparisons are based on the z-test for significance of pairs. Choose buttons below based on which two sets over time and borough you would like to compare. For example, choosing 2021 and Brooklyn for Set 1 and 2022 and Manhattan for Set 2 allows us to compare if Manhattan in 2022 was more dangerous in terms of recorded automobile crashes than Brooklyn in 2021. The danger here is computed by the number of people killed/total number of car crashes, and the number of people injured/total number of car crashes.\n\n\n\n\nSet 1 - Year Selection\n\n\n 2021  2022\n\n\nSet 2 - Year Selection\n\n\n 2021  2022\n\n\n\nSet 1 - Borough\n\n\n Bronx  Brooklyn  Manhattan  Queens  Staten Island\n\n\n\nSet 2 - Borough\n\n\n Bronx  Brooklyn  Manhattan  Queens  Staten Island\n\n\n\nCompare Danger in terms of Deaths\n\n\nCompare Danger in terms of Injuries\n\nAre these two sets statistically significantly different from the other?"
  },
  {
    "objectID": "results.html#when-is-it-safe-to-drive-or-walk-basically-get-home-alive",
    "href": "results.html#when-is-it-safe-to-drive-or-walk-basically-get-home-alive",
    "title": "3  Results",
    "section": "3.1 When is it safe to drive or walk (basically get home alive)?",
    "text": "3.1 When is it safe to drive or walk (basically get home alive)?\nWe have a heatmap to represent the frequency of crashes by day of the week and hour of the day. This reveals the patterns in crash occurrence, suggesting potential countermeasures like increased enforcement or public awareness campaigns during high-risk periods.\n\n\nCode\nlibrary(lubridate)\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nCode\n# convert CRASH.DATE column from char to date\ndata$CRASH.DATE &lt;- as.Date(data$CRASH.DATE, format = \"%m/%d/%Y\")\n\ndata2 &lt;- data[c(\"CRASH.DATE\", \"CRASH.TIME\")]\n\n# convert CRASH.TIME column from char to POSIXct time\ndata2$CRASH.TIME &lt;- as.POSIXct(data$CRASH.TIME, format = \"%H:%M\")\n\n# Extract day of the week and hour of the day\ndata2 &lt;- data2 %&gt;%\n  mutate(DayOfWeek = weekdays(CRASH.DATE),\n         HourOfDay = hour(CRASH.TIME))\n\n# Convert DayOfWeek to factor \ndata2$DayOfWeek &lt;- factor(data2$DayOfWeek, levels = rev(c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\")))\n\n# group by DayOfWeek and HourOfDay to represent\nsummarized_data2 &lt;- data2 %&gt;%\n  group_by(DayOfWeek, HourOfDay) %&gt;%\n  summarise(Frequency = n())\n\n\n`summarise()` has grouped output by 'DayOfWeek'. You can override using the\n`.groups` argument.\n\n\nCode\n# summarized_data2\n\n# Create a heatmap\nggplot(summarized_data2, aes(y = DayOfWeek, x = HourOfDay, fill= Frequency )) +\n  geom_tile(stat = \"identity\") +\n  scale_fill_viridis_c(trans = \"reverse\") +  \n  labs(title = \"Heatmap for DayOfWeek and HourOfDay\",\n       x = \"Hour of the Day\",\n       y = \"Day of the Week\",\n       fill = \"Frequency\") +\n  theme_minimal()\n\n\n\n\n\nFrom the heatmap above shows that the frequency of collisions has been fairly low after 1AM till 5AM, but as the day goes on, the numbers of collisions increase and it is maximum around 4PM-5PM.\nAnother insight from the above visualization is that there is a clear difference in frequency of collisions on Saturday and Sunday, compared to the other days of the week. We can notice that the frequency of collisions on these two days is comparatively less than the other days."
  },
  {
    "objectID": "results.html#should-you-buy-a-sedan",
    "href": "results.html#should-you-buy-a-sedan",
    "title": "3  Results",
    "section": "3.2 Should you buy a Sedan?",
    "text": "3.2 Should you buy a Sedan?\n\n\nCode\n#taking top 30 most frequent vehicles involved in collisions\nvehicles &lt;- sort(table(data$VEHICLE.TYPE.CODE.1),decreasing = TRUE)[seq(1,30)]\n\n# Convert the vehicles vector to a dataframe\ndata31 &lt;- data.frame(Values = vehicles)\ncolnames(data31) &lt;- c(\"vehicle\", \"frequency\")\n# data31\n\n# Create a Cleveland dot plot\nggplot(data31, aes(x = vehicle, y = frequency)) +\n  geom_point(position = \"jitter\", color = \"blue\", size = 2) +\n  labs(title = \"Cleveland Dot Plot with Top 30 Most Frequently Involved Vehicles\", \n       x = \"Vehicles\", \n       y = \"Number of Cases\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::comma) +\n  coord_flip()\n\n\n\n\n\nThe bar graph shows that the type of vehicle that has been most frequently involved in the collision cases has been Sedan with over 500K reported cases in the last 11 years, followed by Station Wagon/Sport Utility Vehicle, Passenger Vehicle and Taxi."
  },
  {
    "objectID": "results.html#what-causes-collisions-to-happen",
    "href": "results.html#what-causes-collisions-to-happen",
    "title": "3  Results",
    "section": "3.3 What causes Collisions to happen?",
    "text": "3.3 What causes Collisions to happen?\n\n\nCode\n#taking top 20 most frequent contributing factors in collisions\nfactors &lt;- sort(table(data$CONTRIBUTING.FACTOR.VEHICLE.1), decreasing = TRUE)[seq(1,20)]\n\n# Convert the factors vector to a dataframe \ndata32 &lt;- data.frame(Values = factors)\ncolnames(data32) &lt;- c(\"factor\", \"frequency\")\n# data32\n\n# Create a Cleveland dot plot\nggplot(data32, aes(x = factor, y = frequency)) +\n  geom_point(position = \"jitter\", color = \"blue\", size = 2) +\n  labs(title = \"Cleveland Dot Plot with Top 20 Most Frequently Contributing Factors\",\n       x = \"Contributing Factors\",\n       y = \"Number of Cases\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::comma) +\n  coord_flip()\n\n\n\n\n\nAs we see, maximum number of cases have unspecified cause of collision (with almost 700K cases).\nBut in known reasons of collision, Driver Inattention or Distraction stands on top. Following that there’s failure to yield right-of-way, following the vehicle too closely or backing unsafely.\nIt’s interesting to notice that alcohol involvement and unsafe speed stand a little less high on the most frequently contributing factors list than they are generally thought to be.\nOne contributing factor that most people would not guess to be so frequent is Prescription Medication. Almost 20K cases has reported that to be the major contributing factor of collision."
  },
  {
    "objectID": "results.html#who-gets-hurt-and-how",
    "href": "results.html#who-gets-hurt-and-how",
    "title": "3  Results",
    "section": "3.4 Who gets hurt and how?",
    "text": "3.4 Who gets hurt and how?\n\n\nCode\nlibrary(tidyr)\n\n# You can use your entire dataset or filter it based on your analysis needs\ndata4 &lt;- data[c(\"NUMBER.OF.PEDESTRIANS.INJURED\", \"NUMBER.OF.PEDESTRIANS.KILLED\",\n                \"NUMBER.OF.CYCLIST.INJURED\", \"NUMBER.OF.CYCLIST.KILLED\",\n                \"NUMBER.OF.MOTORIST.INJURED\", \"NUMBER.OF.MOTORIST.KILLED\")]\n\n# Pivot longer the columns\ndata4_long &lt;- data4 %&gt;%\n  pivot_longer(\n    cols = starts_with(\"NUMBER.OF.\"),\n    names_to = \"Category\",\n    values_to = \"Count\"\n  ) \n\n# summarizing by group sum\ndata4_summarized &lt;- data4_long %&gt;%\n  group_by(Category) %&gt;%\n  summarise(Count = sum(Count))\n\n# adding new column person_involved and fatality_type with information for the existing data\ndata4_summarized &lt;- data4_summarized %&gt;%\n  mutate(\n    person_involved = gsub(\"NUMBER.OF.(\\\\w+)\\\\.(\\\\w+)\", \"\\\\1\", Category),\n    fatality_type = gsub(\"NUMBER.OF.(\\\\w+)\\\\.(\\\\w+)\", \"\\\\2\", Category)\n  )\n\n# Drop the Category column\ndata4_summarized &lt;- data4_summarized[, c(\"person_involved\", \"fatality_type\", \"Count\")]\n\n# Calculate percentages for each combination of fatality_type and person_involved\ndata4_summarized &lt;- data4_summarized %&gt;%\n  group_by(fatality_type) %&gt;%\n  mutate(percentage = Count / sum(Count))\n\n# data4_summarized\n\n#create a stacked bar chart\nggplot(data4_summarized, aes(x = fatality_type, y=Count, fill = person_involved)) +\n  geom_bar(position = \"fill\", stat = \"identity\") +\n  geom_text(aes(label = scales::percent(percentage)),\n            position = position_fill(vjust = 0.5),  # Adjust text position\n            show.legend = FALSE) +  # Hide legend for the text\n  labs(title = \"Percent Stacked Bar Chart of Fatalities\",\n       x = \"Fatality Type\",\n       y = \"Percentage\",\n       fill = \"Person Involved\") +\n  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Format y-axis as percentage\n  theme_minimal()\n\n\n\n\n\nThe above stacked bar chart gives some interesting information and comparison in data.\nOf all the people who are injured or killed, there is a similar percentage that is cyclists. But percentage of pedestrians killed in collision is thrice the percentage of pedestrians injured. This is opposite for the motorists. This implies that given a person gets into a crash, the chances of them dying are way higher if they are a pedestrian than a motorist.\nOf all the people who get killed in collisions, more than 50 percent are pedestrians. This says that pedestrians are the most prone to a serious fatality in a collision."
  },
  {
    "objectID": "results.html#how-did-the-number-of-collisions-changed-over-time",
    "href": "results.html#how-did-the-number-of-collisions-changed-over-time",
    "title": "3  Results",
    "section": "3.5 How did the number of Collisions changed over time?",
    "text": "3.5 How did the number of Collisions changed over time?\n\n\nCode\n# Create a new dataset with month-year and count columns\ndata5 &lt;- data %&gt;%\n  mutate(MonthYear = format(CRASH.DATE, \"%Y-%m\")) %&gt;%\n  group_by(MonthYear, BOROUGH) %&gt;%\n  summarise(CrashCount = n())\n\n\n`summarise()` has grouped output by 'MonthYear'. You can override using the\n`.groups` argument.\n\n\nCode\n# converting MonthYear in data5 to date format\ndata5$MonthYear &lt;- as.Date(paste(data5$MonthYear, \"01\", sep = \"-\"))\n\n# omit NA values\ndata5 &lt;- na.omit(data5)\n\n# Create a separate dataset for overall pattern\noverall_pattern &lt;- data5 %&gt;%\n  group_by(MonthYear) %&gt;%\n  summarise(TotalCases = sum(CrashCount))\n\n# Create a time series line plot\nggplot(data5, aes(x = MonthYear, y = CrashCount, color = BOROUGH)) +\n  geom_line(size = 1, alpha = 0.5) +\n  geom_line(data = overall_pattern, aes(x = MonthYear, y = TotalCases, color = \"OVERALL\"), linetype = \"solid\", size = 1.3) +\n  labs(title = \"Time Series Line Plot of Case Counts by Borough\",\n       x = \"Year\",\n       y = \"Case Count\") +\n  theme_minimal() +\n  scale_x_date(date_labels = \"%Y\", date_breaks = \"1 year\")\n\n\n\n\n\nThe time series plot of case count shows the trends of number of cases over the years in different boroughs of New York and also as a whole (“overall”).\nThe most visible trend in the graph is that there was a major dip in the number of reported collision cases in 2020, which is potentially because of the pandemic and the lockdown. Even though we can see that the cases started to rise after 2020, the numbers have still been nearly half of what it used to be before 2020.\nBrooklyn has been on top when it comes to the number of reported collisions, followed by Queens, Manhattan and Da Bronx. Staten Island has had the least reported cases since 2012, and it is the only borough that did not see any decrease in the number of cases during lockdown."
  },
  {
    "objectID": "results.html#who-is-more-likely-to-get-involved-in-collisions---demographic-study",
    "href": "results.html#who-is-more-likely-to-get-involved-in-collisions---demographic-study",
    "title": "3  Results",
    "section": "3.6 Who is more likely to get involved in Collisions? - Demographic Study",
    "text": "3.6 Who is more likely to get involved in Collisions? - Demographic Study\n\n\nCode\nlibrary(vcd)\n\n\nLoading required package: grid\n\n\nCode\nlibrary(ggmosaic)\n\n\n\nAttaching package: 'ggmosaic'\n\n\nThe following objects are masked from 'package:vcd':\n\n    mosaic, spine\n\n\nCode\n# reading the people data\npeople_data &lt;- read.csv(\"people.csv\")\npeople_data &lt;-  mutate_all(people_data, ~ifelse(is.character(.x) & nchar(.x) == 0, NA, .x))\n\n# Filter the data based on the condition\npeople_data &lt;- subset(people_data, (PERSON_TYPE == \"Occupant\" & POSITION_IN_VEHICLE == \"Driver\") | PERSON_TYPE == \"Bicyclist\" | PERSON_TYPE == \"Pedestrian\")\n\n# Replace \"Occupant\" with \"Driver\" in the PERSON_TYPE column\npeople_data$PERSON_TYPE &lt;- ifelse(people_data$PERSON_TYPE == \"Occupant\", \"Driver\", people_data$PERSON_TYPE)\n\n#drop the rows where PERSON_SEX is \"U\"\npeople_data &lt;- subset(people_data, PERSON_SEX != \"U\")\n\n# taking a subset of these three columns only\ndata6 &lt;- people_data[c(\"PERSON_AGE\", \"PERSON_SEX\", \"PERSON_TYPE\")]\n\n# omitting the rows with NA values\ndata6 &lt;- na.omit(data6)\n\n# Filter rows based on the condition for PERSON_AGE\ndata6 &lt;- data6 %&gt;%\n  filter(PERSON_AGE &gt;= 1 & PERSON_AGE &lt;= 100)\n\n# Create age bins with intervals of 10\nlabels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\")\n\n# Add a new column 'AgeBin' to the dataframe\ndata6 &lt;- data6 %&gt;%\n  mutate(AgeBin = cut(PERSON_AGE, breaks = seq(0, 100, by=10), \n                      labels = labels, \n                      include.lowest = TRUE))\n\n# Create a mosaic plot\nvcd::mosaic(PERSON_SEX ~ PERSON_TYPE + AgeBin, data = data6, highlighting_fill = c(\"lightgreen\", \"cornflowerblue\"), main = \"Mosaic Plot\", direction=c(\"v\",\"v\",\"h\"))\n\n\n\n\n\nOf all the people getting into collisions, a big majority of them are drivers, and a very few are bicyclists or pedestrians.\nAlmost 80% of all bicyclist and 75% of drivers are male. But in case of pedestrians, there is a nearly 50-50 between men and women over all ages."
  }
]