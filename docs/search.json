[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Motor Vehicle Collisions",
    "section": "",
    "text": "1 Introduction\nWe chose to study motor vehicle collisions in the city of New York. More than 46,000 people die in car crashes each year, according to Annual United States Road Crash Statistics (ASIRT). The U.S. traffic fatality rate is 12.4 deaths per 100,000 inhabitants. New York City is the most populous city in the United States with 19.6 million inhabitants. Almost 45 percent of all households in the city own a car. If we were able to study the reasons behind car crashes, we could attempt to implement methods or practices to reduce fatalities per year. Measures such as including more speed breakers or traffic lights in certain intersections that have frequent car crashes, deploying more police patrols at a certain time or place, or revising certain laws and procedures can help prevent a lot of unnecessary loss of life.\n\n\nOur research delves into a multifaceted examination of the geographical and temporal dimensions of car crash collisions within the urban landscape. A main point of interest in our study is where in the city is most susceptible to vehicular collisions. Perhaps road structure, increased traffic, poor speed limits or other factors could lead to increased frequency of collisions in certain areas. Additionally, our study extends to the temporal realm, aiming to discern patterns associated with the occurrence of car crashes. This involves scrutinizing whether discernible weekly or daily trends manifest in the timing and day of the week when collisions are most prevalent. Furthermore, our investigation delves into the root causes behind car crashes such as driver distraction or poor visibility due to weather conditions. We are also interested in the characteristics of the driver. We are particularly interested in demographic variables such as age, gender, and race, recognizing the potential for these factors to play a role in the occurrence and severity of car collisions."
  },
  {
    "objectID": "data.html#technical-description",
    "href": "data.html#technical-description",
    "title": "2  Data",
    "section": "2.1 Technical Description",
    "text": "2.1 Technical Description\n\n2.1.1 Data Source\nThe data is taken from the official data catalog of the United States government (data.gov).\n\n\n2.1.2 Data Collection\nThe Motor Vehicle Collisions crash data contains details on the crash events. Each row represents a crash event. It contain information from all police reported motor vehicle collisions in NYC. The police report (MV104-AN) is required to be filled out for collisions where someone is injured or killed, or where there is at least $1000 worth of damage.\nIt should be noted that the data is preliminary and subject to change when the MV-104AN forms are amended based on revised crash details. The most accurate, up to date statistics on traffic fatalities can be found on NYPD Motor Vehicle Collisions page, which is updated weekly.\n\n\n2.1.3 Information about the data\n\nThe data is available in multiple formats but we have used the .csv file.\nThe data contains entries from 2012 to as latest as Nov 25, 2023 and it is updated every week\nThere are 29 features and 2,044,903 entries of crashes.\n\n\nThe data includes information about the following:\n\n\nThe date, time, and location of the crash\nThe type of crash (e.g., car-to-car, car-to-pedestrian)\nThe severity of the crash (e.g., property damage only, injuries, fatalities)\nThe factors that contributed to the crash (e.g., speeding, drunk driving, distracted driving)\nThe demographics of the people involved in the crash (e.g., age, gender, race/ethnicity)\n\n\n\n2.1.4 Issues with the data\nOne problems with the data is that there are a lot of missing values in many features that need to be handled.\n\n\n2.1.5 How to import the data\nWe downloaded the data and read it locally as a csv file to analyse it."
  },
  {
    "objectID": "data.html#research-plan",
    "href": "data.html#research-plan",
    "title": "2  Data",
    "section": "2.2 Research Plan",
    "text": "2.2 Research Plan\nThe dataset comprises a comprehensive array of variables that align with the research questions outlined in the introduction. The information provided within each column allows for a nuanced exploration of the factors influencing car crash collisions in the city. Let’s break down how each variable contributes to answering the research questions:\nGeographical Analysis:\nBOROUGH: This categorical variable indicates the borough where the collision occurred. It will be instrumental in identifying specific areas with a higher incidence of car crashes, facilitating an analysis of the spatial distribution of collisions within the city.\nZIP CODE: The postal code of the incident occurrence provides a more granular geographical perspective, enabling a detailed examination of collision patterns at the neighborhood level.\nLATITUDE and LONGITUDE: These coordinates offer precise spatial information, facilitating mapping and spatial analysis to pinpoint exact locations where collisions are more prevalent.\nLOCATION: The latitude and longitude pair in this variable further reinforces the spatial context, allowing for spatial visualization and analysis.\nON STREET NAME and CROSS STREET NAME: These variables offer insights into the specific streets and intersections where collisions occur, contributing to the assessment of road structure and design.\nTemporal Analysis:\nCRASH DATE and CRASH TIME: These variables provide a temporal dimension to the analysis, allowing for the identification of weekly or daily patterns in the occurrence of car crashes. Examining the temporal aspect is crucial for understanding if there are specific times or days when collisions are more likely. Causal Factors and Characteristics:\nCONTRIBUTING FACTOR VEHICLE 1-5: These categorical variables capture the factors contributing to each collision, offering valuable information on the reasons behind crashes. Analyzing these factors will aid in understanding whether issues such as distracted driving or weather conditions are prevalent.\nNUMBER OF PERSONS INJURED/KILLED, NUMBER OF PEDESTRIANS INJURED/KILLED, NUMBER OF CYCLISTS INJURED/KILLED, NUMBER OF MOTORIST INJURED/KILLED: These numerical variables provide a quantitative overview of the impact of collisions, helping to gauge the severity of incidents.\nVEHICLE TYPE CODE 1-5: These variables categorize the types of vehicles involved in each collision. Examining the vehicle types can contribute to understanding collision patterns based on the characteristics of the vehicles.\nIdentification and Tracking:\nCOLLISION_ID: This unique identifier serves as the primary key for the dataset, allowing for the tracking and analysis of individual collision records.\nIn summary, the dataset’s rich array of variables facilitates a comprehensive exploration of the spatial, temporal, and causal dimensions of car crash collisions in the city. By leveraging these variables, we can derive meaningful insights into the factors influencing collision patterns and formulate informed recommendations for targeted interventions and policy improvements."

  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.3 Missing value analysis",

    "text": "2.3 Missing value analysis"
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",

    "text": "Compare The Relative Danger of Two Boroughs over the Time Periods 2021 and 2022.\n\n\nComparisions are based on the z-test for significance of pairs. Choose buttons below based on which two sets over time and borough you would like to compare. For example, choosing 2021 and Brooklyn for Set 1 and 2022 and Manhattan for Set 2 allows us to compare if Manhattan in 2022 was more dangerous in terms of recorded automobile crashes than Brooklyn in 2021. The danger here is computed by the number of people killed/total number of car crashes, and the number of people injured/total number of car crashes.\n\n\n\n\nSet 1 - Year Selection\n\n\n 2021  2022\n\n\nSet 2 - Year Selection\n\n\n 2021  2022\n\n\n\nSet 1 - Borough\n\n\n Bronx  Brooklyn  Manhattan  Queens  Staten Island\n\n\n\nSet 2 - Borough\n\n\n Bronx  Brooklyn  Manhattan  Queens  Staten Island\n\n\n\nCompare Danger in terms of Deaths\n\n\nCompare Danger in terms of Injuries\n\nAre these two sets statistically significantly different from the other?"
    "text": "Compare The Deadliness of Two Boroughs over the Time Periods 2021 and 2022.\n\n\nComparisions are based on the z-test for significance of pairs. Choose buttons below based on which two sets over time and borough you would like to compare. For example, choosing 2021 and Brooklyn for Set 1 and 2022 and Manhattan for Set 2 allows us to compare if Manhattan in 2022 was more dangerous in terms of recorded automobile crashes than Brooklyn in 2021. The danger here is computed by the number of people injured/total number of car crashes.\n\n\n\n\nSet 1 - Year Selection\n\n\n 2021  2022\n\n\nSet 2 - Year Selection\n\n\n 2021  2022\n\n\n\nSet 1 - Borough\n\n\n Bronx  Brooklyn  Manhattan  Queens  Staten Island\n\n\n\nSet 2 - Borough\n\n\n Bronx  Brooklyn  Manhattan  Queens  Staten Island\n\n\n\nCompute Significance\n\nAre these two sets statistically significantly different from the other?"

    "text": "2.3 Missing value analysis\nThe data has a lot of missing values in multiple columns that we will have to handle. The following bar graph shows the total number of missing values in columns that have missing values.\n\n\nCode\n# read the data file\ndata &lt;- read.csv(\"collisions.csv\")\n\n\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(stringr)\n\n# converting the empty char cells to NA\ndata &lt;-  mutate_all(data, ~ifelse(is.character(.x) & nchar(.x) == 0, NA, .x))\n\nmissing_values &lt;- colSums(is.na(data))\nmissing_values &lt;- missing_values[missing_values &gt; 0]\n\n# Convert the result to a data frame\nmissing_df &lt;- data.frame(\n  column = names(missing_values),\n  missing_count = missing_values\n)\n\n# Create a bar graph\nggplot(missing_df, aes(x = reorder(column, -missing_count), y = missing_count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\", color = \"black\") +\n  geom_text(aes(label = missing_count), hjust = 1, color = \"black\") +\n  labs(title = \"Number of Missing Values\",\n       x = \"Columns\",\n       y = \"Missing Count\") +\n  theme_minimal() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 0, hjust = 1)) +\n  scale_y_continuous(labels = scales::number_format())"
  },
  {
    "objectID": "results.html#when-is-it-safe-to-drive-or-walk-basically-get-home-alive",
    "href": "results.html#when-is-it-safe-to-drive-or-walk-basically-get-home-alive",
    "title": "3  Results",
    "section": "3.1 When is it safe to drive or walk (basically get home alive)?",
    "text": "3.1 When is it safe to drive or walk (basically get home alive)?\nWe have a heatmap to represent the frequency of crashes by day of the week and hour of the day. This reveals the patterns in crash occurrence, suggesting potential countermeasures like increased enforcement or public awareness campaigns during high-risk periods.\n\n\nCode\nlibrary(lubridate)\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nCode\n# convert CRASH.DATE column from char to date\ndata$CRASH.DATE &lt;- as.Date(data$CRASH.DATE, format = \"%m/%d/%Y\")\n\ndata2 &lt;- data[c(\"CRASH.DATE\", \"CRASH.TIME\")]\n\n# convert CRASH.TIME column from char to POSIXct time\ndata2$CRASH.TIME &lt;- as.POSIXct(data$CRASH.TIME, format = \"%H:%M\")\n\n# Extract day of the week and hour of the day\ndata2 &lt;- data2 %&gt;%\n  mutate(DayOfWeek = weekdays(CRASH.DATE),\n         HourOfDay = hour(CRASH.TIME))\n\n# Convert DayOfWeek to factor \ndata2$DayOfWeek &lt;- factor(data2$DayOfWeek, levels = rev(c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\")))\n\n# group by DayOfWeek and HourOfDay to represent\nsummarized_data2 &lt;- data2 %&gt;%\n  group_by(DayOfWeek, HourOfDay) %&gt;%\n  summarise(Frequency = n())\n\n\n`summarise()` has grouped output by 'DayOfWeek'. You can override using the\n`.groups` argument.\n\n\nCode\n# summarized_data2\n\n# Create a heatmap\nggplot(summarized_data2, aes(y = DayOfWeek, x = HourOfDay, fill= Frequency )) +\n  geom_tile(stat = \"identity\") +\n  scale_fill_viridis_c(trans = \"reverse\") +  \n  labs(title = \"Heatmap for DayOfWeek and HourOfDay\",\n       x = \"Hour of the Day\",\n       y = \"Day of the Week\",\n       fill = \"Frequency\") +\n  theme_minimal()\n\n\n\n\n\nFrom the heatmap above shows that the frequency of collisions has been fairly low after 1AM till 5AM, but as the day goes on, the numbers of collisions increase and it is maximum around 4PM-5PM.\nAnother insight from the above vizualization is that there is a clear difference in frequency of collisions on Saturday and Sunday, compared to the other days of the week. We can notice that the frequency of collisions on these two days is comparatively less than the other days."
  },
  {
    "objectID": "results.html#should-you-buy-a-sedan",
    "href": "results.html#should-you-buy-a-sedan",
    "title": "3  Results",
    "section": "3.2 Should you buy a Sedan?",
    "text": "3.2 Should you buy a Sedan?\n\n\nCode\n#taking top 30 most frequent vehicles involved in collisions\nvehicles &lt;- sort(table(data$VEHICLE.TYPE.CODE.1),decreasing = TRUE)[seq(1,30)]\n\n# Convert the vehicles vector to a dataframe\ndata31 &lt;- data.frame(Values = vehicles)\ncolnames(data31) &lt;- c(\"vehicle\", \"frequency\")\n# data31\n\n# Create a Cleveland dot plot\nggplot(data31, aes(x = vehicle, y = frequency)) +\n  geom_point(position = \"jitter\", color = \"blue\", size = 2) +\n  labs(title = \"Cleveland Dot Plot with Top 30 Most Frequently Involved Vehicles\", \n       x = \"Vehicles\", \n       y = \"Number of Cases\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::comma) +\n  coord_flip()\n\n\n\n\n\nThe bar graph shows that the type of vehicle that has been most frequently involved in the collision cases has been Sedan with over 500K reported cases in the last 11 years, followed by Station Wagon/Sport Utility Vehicle, Passenger Vehicle and Taxi."
  },
  {
    "objectID": "results.html#what-causes-collisions-to-happen",
    "href": "results.html#what-causes-collisions-to-happen",
    "title": "3  Results",
    "section": "3.3 What causes Collisions to happen?",
    "text": "3.3 What causes Collisions to happen?\n\n\nCode\n#taking top 20 most frequent contributing factors in collisions\nfactors &lt;- sort(table(data$CONTRIBUTING.FACTOR.VEHICLE.1), decreasing = TRUE)[seq(1,20)]\n\n# Convert the factors vector to a dataframe \ndata32 &lt;- data.frame(Values = factors)\ncolnames(data32) &lt;- c(\"factor\", \"frequency\")\n# data32\n\n# Create a Cleveland dot plot\nggplot(data32, aes(x = factor, y = frequency)) +\n  geom_point(position = \"jitter\", color = \"blue\", size = 2) +\n  labs(title = \"Cleveland Dot Plot with Top 20 Most Frequently Contributing Factors\",\n       x = \"Contributing Factors\",\n       y = \"Number of Cases\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::comma) +\n  coord_flip()\n\n\n\n\n\nAs we see, maximum number of cases have unspecified cause of collision (with almost 700K cases).\nBut in known reasons of collision, Driver Inattention or Distraction stands on top. Following that there’s failure to yield right-of-way, following the vehicle too closely or backing unsafely.\nIt’s interesting to notice that alcohol involvement and unsafe speed stand a little less high on the most frequently contributing factors list than they are generally thought to be.\nOne contributing factor that most people would not guess to be so frequent is Prescription Medication. Almost 20K cases has reported that to be the major contributing factor of collision."
  },
  {
    "objectID": "results.html#who-gets-hurt-and-how",
    "href": "results.html#who-gets-hurt-and-how",
    "title": "3  Results",
    "section": "3.4 Who gets hurt and how?",
    "text": "3.4 Who gets hurt and how?\n\n\nCode\nlibrary(tidyr)\n\n# You can use your entire dataset or filter it based on your analysis needs\ndata4 &lt;- data[c(\"NUMBER.OF.PEDESTRIANS.INJURED\", \"NUMBER.OF.PEDESTRIANS.KILLED\",\n                \"NUMBER.OF.CYCLIST.INJURED\", \"NUMBER.OF.CYCLIST.KILLED\",\n                \"NUMBER.OF.MOTORIST.INJURED\", \"NUMBER.OF.MOTORIST.KILLED\")]\n\n# Pivot longer the columns\ndata4_long &lt;- data4 %&gt;%\n  pivot_longer(\n    cols = starts_with(\"NUMBER.OF.\"),\n    names_to = \"Category\",\n    values_to = \"Count\"\n  ) \n\n# summarizing by group sum\ndata4_summarized &lt;- data4_long %&gt;%\n  group_by(Category) %&gt;%\n  summarise(Count = sum(Count))\n\n# adding new column person_involved and fatality_type with information for the existing data\ndata4_summarized &lt;- data4_summarized %&gt;%\n  mutate(\n    person_involved = gsub(\"NUMBER.OF.(\\\\w+)\\\\.(\\\\w+)\", \"\\\\1\", Category),\n    fatality_type = gsub(\"NUMBER.OF.(\\\\w+)\\\\.(\\\\w+)\", \"\\\\2\", Category)\n  )\n\n# Drop the Category column\ndata4_summarized &lt;- data4_summarized[, c(\"person_involved\", \"fatality_type\", \"Count\")]\n\n# Calculate percentages for each combination of fatality_type and person_involved\ndata4_summarized &lt;- data4_summarized %&gt;%\n  group_by(fatality_type) %&gt;%\n  mutate(percentage = Count / sum(Count))\n\n# data4_summarized\n\n#create a stacked bar chart\nggplot(data4_summarized, aes(x = fatality_type, y=Count, fill = person_involved)) +\n  geom_bar(position = \"fill\", stat = \"identity\") +\n  geom_text(aes(label = scales::percent(percentage)),\n            position = position_fill(vjust = 0.5),  # Adjust text position\n            show.legend = FALSE) +  # Hide legend for the text\n  labs(title = \"Percent Stacked Bar Chart of Fatalities\",\n       x = \"Fatality Type\",\n       y = \"Percentage\",\n       fill = \"Person Involved\") +\n  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Format y-axis as percentage\n  theme_minimal()\n\n\n\n\n\nThe above stacked bar chart gives some interesting information and comparison in data.\nOf all the people who are injured or killed, there is a similar percentage that is cyclists. But percentage of pedestrians killed in collision is thrice the percentage of pedestrians injured. This is opposite for the motorists. This implies that given a person gets into a crash, the chances of them dying are way higher if they are a pedestrian than a motorist.\nOf all the people who get killed in collisions, more than 50 percent are pedestrians. This says that pedestrians are the most prone to a serious fatality in a collision."
  },
  {
    "objectID": "results.html#how-did-the-number-of-collisions-changed-over-time",
    "href": "results.html#how-did-the-number-of-collisions-changed-over-time",
    "title": "3  Results",

    "section": "3.5 How did the number of Collisions changed over time?",
    "text": "3.5 How did the number of Collisions changed over time?\n\n\nCode\n# Create a new dataset with month-year and count columns\ndata5 &lt;- data %&gt;%\n  mutate(MonthYear = format(CRASH.DATE, \"%Y-%m\")) %&gt;%\n  group_by(MonthYear, BOROUGH) %&gt;%\n  summarise(CrashCount = n())\n\n\n`summarise()` has grouped output by 'MonthYear'. You can override using the\n`.groups` argument.\n\n\nCode\n# converting MonthYear in data5 to date format\ndata5$MonthYear &lt;- as.Date(paste(data5$MonthYear, \"01\", sep = \"-\"))\n\n# omit NA values\ndata5 &lt;- na.omit(data5)\n\n# Create a separate dataset for overall pattern\noverall_pattern &lt;- data5 %&gt;%\n  group_by(MonthYear) %&gt;%\n  summarise(TotalCases = sum(CrashCount))\n\n# Create a time series line plot\nggplot(data5, aes(x = MonthYear, y = CrashCount, color = BOROUGH)) +\n  geom_line(size = 1, alpha = 0.5) +\n  geom_line(data = overall_pattern, aes(x = MonthYear, y = TotalCases, color = \"OVERALL\"), linetype = \"solid\", size = 1.3) +\n  labs(title = \"Time Series Line Plot of Case Counts by Borough\",\n       x = \"Year\",\n       y = \"Case Count\") +\n  theme_minimal() +\n  scale_x_date(date_labels = \"%Y\", date_breaks = \"1 year\")\n\n\n\n\n\nThe time series plot of case count shows the trends of number of cases over the years in different boroughs of New York and also as a whole (“overall”).\nThe most visible trend in the graph is that there was a major dip in the number of reported collision cases in 2020, which is potentially because of the pandemic and the lockdown. Even though we can see that the cases started to rise after 2020, the numbers have still been nearly half of what it used to be before 2020.\nBrooklyn has been on top when it comes to the number of reported collisions, followed by Queens, Manhattan and Da Bronx. Staten Island has had the least reported cases since 2012, and it is the only borough that did not see any decrease in the number of cases during lockdown."


    "section": "3.5 Trends in Number of Cases Over Time",
    "text": "3.5 Trends in Number of Cases Over Time\n\n\nCode\n# Create a new dataset with month-year and count columns\ndata5 &lt;- data %&gt;%\n  mutate(MonthYear = format(CRASH.DATE, \"%Y-%m\")) %&gt;%\n  group_by(MonthYear, BOROUGH) %&gt;%\n  summarise(CrashCount = n())\n\n\n`summarise()` has grouped output by 'MonthYear'. You can override using the\n`.groups` argument.\n\n\nCode\n# converting MonthYear in data5 to date format\ndata5$MonthYear &lt;- as.Date(paste(data5$MonthYear, \"01\", sep = \"-\"))\n\n# omit NA values\ndata5 &lt;- na.omit(data5)\n\n# Create a separate dataset for overall pattern\noverall_pattern &lt;- data5 %&gt;%\n  group_by(MonthYear) %&gt;%\n  summarise(TotalCases = sum(CrashCount))\n\n# Create a time series line plot\nggplot(data5, aes(x = MonthYear, y = CrashCount, color = BOROUGH)) +\n  geom_line(size = 1, alpha = 0.5) +\n  geom_line(data = overall_pattern, aes(x = MonthYear, y = TotalCases, color = \"OVERALL\"), linetype = \"solid\", size = 1.3) +\n  labs(title = \"Time Series Line Plot of Case Counts by Borough\",\n       x = \"Year\",\n       y = \"Case Count\") +\n  theme_minimal() +\n  scale_x_date(date_labels = \"%Y\", date_breaks = \"1 year\")\n\n\n\n\n\nThe time series plot of case count shows the trends of number of cases over the years in different boroughs of New York and also as a whole (“overall”).\nThe most visible trend in the graph is that there was a major dip in the number of reported collision cases in 2020, which is potentially because of the pandemic and the lockdown. Even though we can see that the cases started to rise after 2020, the numbers have still been nearly half of what it used to be before 2020.\nBrooklyn has been on top when it comes to the number of reported collisions, followed by Queens, Manhattan and Da Bronx. Staten Island has had the least reported cases since 2012, and it is the only borough that did not see any decrease in the number of cases during lockdown."

  },
  {
    "objectID": "results.html#who-is-more-likely-to-get-involved-in-collisions---demographic-study",
    "href": "results.html#who-is-more-likely-to-get-involved-in-collisions---demographic-study",
    "title": "3  Results",

    "section": "3.6 Who is more likely to get involved in Collisions? - Demographic Study",
    "text": "3.6 Who is more likely to get involved in Collisions? - Demographic Study\n\n\nCode\nlibrary(vcd)\n\n\nLoading required package: grid\n\n\nCode\nlibrary(ggmosaic)\n\n\n\nAttaching package: 'ggmosaic'\n\n\nThe following objects are masked from 'package:vcd':\n\n    mosaic, spine\n\n\nCode\n# reading the people data\npeople_data &lt;- read.csv(\"people.csv\")\npeople_data &lt;-  mutate_all(people_data, ~ifelse(is.character(.x) & nchar(.x) == 0, NA, .x))\n\n# Filter the data based on the condition\npeople_data &lt;- subset(people_data, (PERSON_TYPE == \"Occupant\" & POSITION_IN_VEHICLE == \"Driver\") | PERSON_TYPE == \"Bicyclist\" | PERSON_TYPE == \"Pedestrian\")\n\n# Replace \"Occupant\" with \"Driver\" in the PERSON_TYPE column\npeople_data$PERSON_TYPE &lt;- ifelse(people_data$PERSON_TYPE == \"Occupant\", \"Driver\", people_data$PERSON_TYPE)\n\n#drop the rows where PERSON_SEX is \"U\"\npeople_data &lt;- subset(people_data, PERSON_SEX != \"U\")\n\n# taking a subset of these three columns only\ndata6 &lt;- people_data[c(\"PERSON_AGE\", \"PERSON_SEX\", \"PERSON_TYPE\")]\n\n# omitting the rows with NA values\ndata6 &lt;- na.omit(data6)\n\n# Filter rows based on the condition for PERSON_AGE\ndata6 &lt;- data6 %&gt;%\n  filter(PERSON_AGE &gt;= 1 & PERSON_AGE &lt;= 100)\n\n# Create age bins with intervals of 10\nlabels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\")\n\n# Add a new column 'AgeBin' to the dataframe\ndata6 &lt;- data6 %&gt;%\n  mutate(AgeBin = cut(PERSON_AGE, breaks = seq(0, 100, by=10), \n                      labels = labels, \n                      include.lowest = TRUE))\n\n# Create a mosaic plot\nvcd::mosaic(PERSON_SEX ~ PERSON_TYPE + AgeBin, data = data6, highlighting_fill = c(\"lightgreen\", \"cornflowerblue\"), main = \"Mosaic Plot\", direction=c(\"v\",\"v\",\"h\"))\n\n\n\n\n\nOf all the people getting into collisions, a big majority of them are drivers, and a very few are bicyclists or pedestrians.\nAlmost 80% of all bicyclist and 75% of drivers are male. But in case of pedestrians, there is a nearly 50-50 between men and women over all ages."
  },
  {
    "objectID": "conclusion.html#main-takeaways",
    "href": "conclusion.html#main-takeaways",
    "title": "5  Conclusion",
    "section": "5.1 Main Takeaways:",
    "text": "5.1 Main Takeaways:\n\nPedestrians are the most vulnerable in collisions, while drivers usually walk away relatively safer.\nIt’s good to be extra careful around Sedans, Station Wagons, Sport Utility Vehicles and Taxis since they are biggest culprits as seen in our data..\nPeople can be educated more on ways to be more attentive while driving, and about the right-of-way and why it’s important to reduce the collisions and their consequences.\nThe Mystery of Staten Island: While Staten Island had much much lower cases of collisions overall, the number of collisions did not change at all when there was a COVID-19 Mandated lockdwon. Was there no lockdown in Staten Island!? There probably was, but there had be some kind of change in the pattern of number of cases, and oddly there wasn’t. Unsolved Mystery.\nAwareness or dangerous times and areas can help make drivers more alert and cautious while driving."
  },
  {
    "objectID": "conclusion.html#limitations",
    "href": "conclusion.html#limitations",
    "title": "5  Conclusion",
    "section": "5.2 Limitations:",
    "text": "5.2 Limitations:\n\nThe dataset is very big in size (414 MB and 800MB), and github has a limit of 50MB for files to be pushed. So the interactivity part was compromised because of that.\nThe collected data had a lot of NA values and there was just a lot of data that it, in a way, hindered some analysis ideas. Like most frequently involved vehicles has almost 1600 unique values of vehicles; so to show the graphs with their relation to other variables would not be practically feasible.\nSome data was highly skewed so some experimental graphs didn’t produce any visible insights. For instance, the number of people injured is exponentially more than the number of people killed; so much so that they were not even comparable."
  },
  {
    "objectID": "conclusion.html#future-directions",
    "href": "conclusion.html#future-directions",
    "title": "5  Conclusion",
    "section": "5.3 Future Directions:",
    "text": "5.3 Future Directions:\n\nThis can very easily be extended to more cities/states and more accurate and inclusive insights can be gather from the data which in-turn might help to come up with effective solutions.\nFrom this exploratory analysis, we could employ modelling techniques to see which areas are more prone to collisions, and make those areas safer (eg adding more speed bumps, adding stop signs and more traffic lights)."
  },
  {
    "objectID": "conclusion.html#lessons-learned",
    "href": "conclusion.html#lessons-learned",
    "title": "5  Conclusion",
    "section": "5.4 Lessons Learned:",
    "text": "5.4 Lessons Learned:\n\nLearned to work with big dataset (5 million observations) with skewness and a lot of missing values.\nThe collected data was very dirty, and had to be cleaned in many ways. So, learned to do that."

    "section": "3.6 Relation between Person Age vs Gender vs Type",
    "text": "3.6 Relation between Person Age vs Gender vs Type\n\n\nCode\nlibrary(vcd)\n\n\nLoading required package: grid\n\n\nCode\nlibrary(ggmosaic)\n\n\n\nAttaching package: 'ggmosaic'\n\n\nThe following objects are masked from 'package:vcd':\n\n    mosaic, spine\n\n\nCode\n# reading the people data\npeople_data &lt;- read.csv(\"people.csv\")\npeople_data &lt;-  mutate_all(people_data, ~ifelse(is.character(.x) & nchar(.x) == 0, NA, .x))\n\n# Filter the data based on the condition\npeople_data &lt;- subset(people_data, (PERSON_TYPE == \"Occupant\" & POSITION_IN_VEHICLE == \"Driver\") | PERSON_TYPE == \"Bicyclist\" | PERSON_TYPE == \"Pedestrian\")\n\n# Replace \"Occupant\" with \"Driver\" in the PERSON_TYPE column\npeople_data$PERSON_TYPE &lt;- ifelse(people_data$PERSON_TYPE == \"Occupant\", \"Driver\", people_data$PERSON_TYPE)\n\n#drop the rows where PERSON_SEX is \"U\"\npeople_data &lt;- subset(people_data, PERSON_SEX != \"U\")\n\n# taking a subset of these three columns only\ndata6 &lt;- people_data[c(\"PERSON_AGE\", \"PERSON_SEX\", \"PERSON_TYPE\")]\n\n# omitting the rows with NA values\ndata6 &lt;- na.omit(data6)\n\n# Filter rows based on the condition for PERSON_AGE\ndata6 &lt;- data6 %&gt;%\n  filter(PERSON_AGE &gt;= 1 & PERSON_AGE &lt;= 100)\n\n# Create age bins with intervals of 10\nlabels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\")\n\n# Add a new column 'AgeBin' to the dataframe\ndata6 &lt;- data6 %&gt;%\n  mutate(AgeBin = cut(PERSON_AGE, breaks = seq(0, 100, by=10), \n                      labels = labels, \n                      include.lowest = TRUE))\n\n# Create a mosaic plot\nvcd::mosaic(PERSON_SEX ~ PERSON_TYPE + AgeBin, data = data6, highlighting_fill = c(\"lightgreen\", \"cornflowerblue\"), main = \"Mosaic Plot\", direction=c(\"v\",\"v\",\"h\"))\n\n\n\n\n\nOf all the people getting into collisions, a big majority of them are drivers, and a very few are bicyclists or pedestrians.\nAlmost 80% of all bicyclist and 75% of drivers are male. But in case of pedestrians, there is a nearly 50-50 between men and women over all ages."

    "section": "3.5 Graph 5: Person Age vs Gender vs Type",
    "text": "3.5 Graph 5: Person Age vs Gender vs Type\n\n\nCode\nlibrary(vcd)\n\n\nLoading required package: grid\n\n\nCode\nlibrary(ggmosaic)\n\n\n\nAttaching package: 'ggmosaic'\n\n\nThe following objects are masked from 'package:vcd':\n\n    mosaic, spine\n\n\nCode\n# reading the people data\npeople_data &lt;- read.csv(\"people.csv\")\npeople_data &lt;-  mutate_all(people_data, ~ifelse(is.character(.x) & nchar(.x) == 0, NA, .x))\n\n# Filter the data based on the condition\npeople_data &lt;- subset(people_data, (PERSON_TYPE == \"Occupant\" & POSITION_IN_VEHICLE == \"Driver\") | PERSON_TYPE == \"Bicyclist\" | PERSON_TYPE == \"Pedestrian\")\n\n# Replace \"Occupant\" with \"Driver\" in the PERSON_TYPE column\npeople_data$PERSON_TYPE &lt;- ifelse(people_data$PERSON_TYPE == \"Occupant\", \"Driver\", people_data$PERSON_TYPE)\n\n#drop the rows where PERSON_SEX is \"U\"\npeople_data &lt;- subset(people_data, PERSON_SEX != \"U\")\n\n# taking a subset of these three columns only\ndata6 &lt;- people_data[c(\"PERSON_AGE\", \"PERSON_SEX\", \"PERSON_TYPE\")]\n\n# omitting the rows with NA values\ndata6 &lt;- na.omit(data6)\n\n# Filter rows based on the condition for PERSON_AGE\ndata6 &lt;- data6 %&gt;%\n  filter(PERSON_AGE &gt;= 1 & PERSON_AGE &lt;= 100)\n\n# Create age bins with intervals of 10\nlabels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\")\n\n# Add a new column 'AgeBin' to the dataframe\ndata6 &lt;- data6 %&gt;%\n  mutate(AgeBin = cut(PERSON_AGE, breaks = seq(0, 100, by=10), \n                      labels = labels, \n                      include.lowest = TRUE))\n\n# Create a mosaic plot\nvcd::mosaic(PERSON_SEX ~ PERSON_TYPE + AgeBin, data = data6, highlighting_fill = c(\"lightgreen\", \"cornflowerblue\"), main = \"Mosaic Plot\", direction=c(\"v\",\"v\",\"h\"))\n\n\n\n\n\nOf all the people getting into collisions, a big majority of them are drivers, and a very few are bicyclists or pedestrians.\nAlmost 80% of all bicyclist and 75% of drivers are male. But in case of pedestrians, there is a nearly 50-50 between men and women over all ages."

  }
]