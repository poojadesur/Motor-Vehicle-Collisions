[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Motor Vehicle Collisions",
    "section": "",
    "text": "1 Introduction\nWe chose to study motor vehicle collisions in the city of New York. More than 46,000 people die in car crashes each year, according to Annual United States Road Crash Statistics (ASIRT). The U.S. traffic fatality rate is 12.4 deaths per 100,000 inhabitants. New York City is the most populous city in the United States with 19.6 million inhabitants. Almost 45 percent of all households in the city own a car. If we were able to study the reasons behind car crashes, we could attempt to implement methods or practices to reduce fatalities per year. Measures such as including more speed breakers or traffic lights in certain intersections that have frequent car crashes, deploying more police patrols at a certain time or place, or revising certain laws and procedures can help prevent a lot of unnecessary loss of life.\n\n\nOur research delves into a multifaceted examination of the geographical and temporal dimensions of car crash collisions within the urban landscape. A main point of interest in our study is where in the city is most susceptible to vehicular collisions. Perhaps road structure, increased traffic, poor speed limits or other factors could lead to increased frequency of collisions in certain areas. Additionally, our study extends to the temporal realm, aiming to discern patterns associated with the occurrence of car crashes. This involves scrutinizing whether discernible weekly or daily trends manifest in the timing and day of the week when collisions are most prevalent. Furthermore, our investigation delves into the root causes behind car crashes such as driver distraction or poor visibility due to weather conditions. We are also interested in the characteristics of the driver. We are particularly interested in demographic variables such as age, gender, and race, recognizing the potential for these factors to play a role in the occurrence and severity of car collisions."
  },
  {
    "objectID": "data.html#technical-description",
    "href": "data.html#technical-description",
    "title": "2  Data",
    "section": "2.1 Technical Description",
    "text": "2.1 Technical Description\n\n2.1.1 Data Source\nThe data is taken from the official data catalog of the United States government (data.gov).\n\n\n2.1.2 Data Collection\nThe Motor Vehicle Collisions crash data contains details on the crash events. Each row represents a crash event. It contain information from all police reported motor vehicle collisions in NYC. The police report (MV104-AN) is required to be filled out for collisions where someone is injured or killed, or where there is at least $1000 worth of damage.\nIt should be noted that the data is preliminary and subject to change when the MV-104AN forms are amended based on revised crash details. The most accurate, up to date statistics on traffic fatalities can be found on NYPD Motor Vehicle Collisions page, which is updated weekly.\n\n\n2.1.3 Information about the data\n\nThe data is available in multiple formats but we have used the .csv file.\nThe data contains entries from 2012 to as latest as Nov 25, 2023 and it is updated every week\nThere are 29 features and 2,044,903 entries of crashes.\n\n\nThe data includes information about the following:\n\n\nThe date, time, and location of the crash\nThe type of crash (e.g., car-to-car, car-to-pedestrian)\nThe severity of the crash (e.g., property damage only, injuries, fatalities)\nThe factors that contributed to the crash (e.g., speeding, drunk driving, distracted driving)\nThe demographics of the people involved in the crash (e.g., age, gender, race/ethnicity)\n\n\n\n2.1.4 Issues with the data\nOne problems with the data is that there are a lot of missing values in many features that need to be handled.\n\n\n2.1.5 How to import the data\nWe downloaded the data and read it locally as a csv file to analyse it."
  },
  {
    "objectID": "data.html#research-plan",
    "href": "data.html#research-plan",
    "title": "2  Data",
    "section": "2.2 Research Plan",
    "text": "2.2 Research Plan\nThe dataset comprises a comprehensive array of variables that align with the research questions outlined in the introduction. The information provided within each column allows for a nuanced exploration of the factors influencing car crash collisions in the city. Let’s break down how each variable contributes to answering the research questions:\nGeographical Analysis:\nBOROUGH: This categorical variable indicates the borough where the collision occurred. It will be instrumental in identifying specific areas with a higher incidence of car crashes, facilitating an analysis of the spatial distribution of collisions within the city.\nZIP CODE: The postal code of the incident occurrence provides a more granular geographical perspective, enabling a detailed examination of collision patterns at the neighborhood level.\nLATITUDE and LONGITUDE: These coordinates offer precise spatial information, facilitating mapping and spatial analysis to pinpoint exact locations where collisions are more prevalent.\nLOCATION: The latitude and longitude pair in this variable further reinforces the spatial context, allowing for spatial visualization and analysis.\nON STREET NAME and CROSS STREET NAME: These variables offer insights into the specific streets and intersections where collisions occur, contributing to the assessment of road structure and design.\nTemporal Analysis:\nCRASH DATE and CRASH TIME: These variables provide a temporal dimension to the analysis, allowing for the identification of weekly or daily patterns in the occurrence of car crashes. Examining the temporal aspect is crucial for understanding if there are specific times or days when collisions are more likely. Causal Factors and Characteristics:\nCONTRIBUTING FACTOR VEHICLE 1-5: These categorical variables capture the factors contributing to each collision, offering valuable information on the reasons behind crashes. Analyzing these factors will aid in understanding whether issues such as distracted driving or weather conditions are prevalent.\nNUMBER OF PERSONS INJURED/KILLED, NUMBER OF PEDESTRIANS INJURED/KILLED, NUMBER OF CYCLISTS INJURED/KILLED, NUMBER OF MOTORIST INJURED/KILLED: These numerical variables provide a quantitative overview of the impact of collisions, helping to gauge the severity of incidents.\nVEHICLE TYPE CODE 1-5: These variables categorize the types of vehicles involved in each collision. Examining the vehicle types can contribute to understanding collision patterns based on the characteristics of the vehicles.\nIdentification and Tracking:\nCOLLISION_ID: This unique identifier serves as the primary key for the dataset, allowing for the tracking and analysis of individual collision records. In summary, the dataset’s rich array of variables facilitates a comprehensive exploration of the spatial, temporal, and causal dimensions of car crash collisions in the city. By leveraging these variables, we can derive meaningful insights into the factors influencing collision patterns and formulate informed recommendations for targeted interventions and policy improvements."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.3 Missing value analysis",
    "text": "2.3 Missing value analysis\nThe data has a lot of missing values in multiple columns that we will have to handle. The following bar graph shows the total number of missing values in columns that have missing values.\n\n\nCode\n# read the data file\ndata &lt;- read.csv(\"collisions.csv\")\n\n\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(stringr)\n\n# converting the empty char cells to NA\ndata &lt;-  mutate_all(data, ~ifelse(is.character(.x) & nchar(.x) == 0, NA, .x))\n\nmissing_values &lt;- colSums(is.na(data))\nmissing_values &lt;- missing_values[missing_values &gt; 0]\n\n# Convert the result to a data frame\nmissing_df &lt;- data.frame(\n  column = names(missing_values),\n  missing_count = missing_values\n)\n\n# Create a bar graph\nggplot(missing_df, aes(x = reorder(column, -missing_count), y = missing_count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\", color = \"black\") +\n  geom_text(aes(label = missing_count), hjust = 1, color = \"black\") +\n  labs(title = \"Number of Missing Values\",\n       x = \"Columns\",\n       y = \"Missing Count\") +\n  theme_minimal() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 0, hjust = 1)) +\n  scale_y_continuous(labels = scales::number_format())"
  },
  {
    "objectID": "results.html#graph-1-crash-severity-by-borough",
    "href": "results.html#graph-1-crash-severity-by-borough",
    "title": "3  Results",
    "section": "3.1 Graph 1: Crash Severity by Borough",
    "text": "3.1 Graph 1: Crash Severity by Borough\nA bar graph or pie chart to visualize the distribution of crash severity across different boroughs in New York City. This can help identify areas with higher concentrations of severe crashes, allowing for targeted interventions.\n\n\nCode\ndata1 &lt;- data[c(\"BOROUGH\",\"NUMBER.OF.PERSONS.INJURED\",\"NUMBER.OF.PERSONS.KILLED\")]\n\n# Group by borough and calculate the sum of people killed and injured\nsummarized_data1 &lt;- data1 %&gt;%\n  group_by(BOROUGH) %&gt;%\n  summarise(SUM.KILLED = sum(NUMBER.OF.PERSONS.KILLED, na.rm = TRUE),\n            SUM.INJURED = sum(NUMBER.OF.PERSONS.INJURED, na.rm = TRUE))\n\nsummarized_data1\n\n\n# A tibble: 6 × 3\n  BOROUGH       SUM.KILLED SUM.INJURED\n  &lt;chr&gt;              &lt;int&gt;       &lt;int&gt;\n1 BRONX                261       67316\n2 BROOKLYN             603      146516\n3 MANHATTAN            323       65805\n4 QUEENS               515      112192\n5 STATEN ISLAND         92       16669\n6 &lt;NA&gt;                1212      217406\n\n\nCode\n# Melt the dataframe to long format for better plotting - like pivot_longer\nlibrary(reshape2)\nlong_data1 &lt;- melt(summarized_data1, id.vars = \"BOROUGH\")\n\n\n# Create a side-by-side bar chart for Number of people killed and injured per borough\nggplot(long_data1, aes(x = BOROUGH, y = value, fill = variable)) +\n  geom_bar(position = \"dodge\", stat = \"identity\", width = 0.7) +\n  labs(title = \"Side-by-Side Bar Chart of Number of people killed & Injured\",\n       x = \"Borough\",\n       y = \"Count\",\n       fill = \"Category\") +\n  theme_minimal()\n\n\n\n\n\n\n\nCode\n# Create a pie chart for the number of people killed per borough\nggplot(summarized_data1, aes(x = \"\", y = SUM.KILLED, fill = BOROUGH)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  geom_text(aes(label = scales::percent(SUM.KILLED / sum(SUM.KILLED, na.rm=TRUE))),\n            position = position_stack(vjust = 0.5), size = 4) +\n  coord_polar(\"y\") +\n  labs(title = \"Number of People Killed per Borough\",\n       x = \"\", y = \"\",\n       fill = \"Borough\") +\n  theme_minimal() +\n  theme(axis.text.x = element_blank())  # Remove x-axis ticks\n\n\n\n\n\nCode\n# Create a pie chart for the number of people INJURED per borough\nggplot(summarized_data1, aes(x = \"\", y = SUM.INJURED, fill = BOROUGH)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  geom_text(aes(label = scales::percent(SUM.INJURED / sum(SUM.INJURED, na.rm=TRUE))),\n            position = position_stack(vjust = 0.5), size = 4) +\n  coord_polar(\"y\") +\n  labs(title = \"Number of People Injured per Borough\",\n       x = \"\", y = \"\",\n       fill = \"Borough\") +\n  theme_minimal() +\n  theme(axis.text.x = element_blank())  # Remove x-axis ticks"
  },
  {
    "objectID": "results.html#graph-2-crash-frequency-by-day-of-the-week-and-time-of-day",
    "href": "results.html#graph-2-crash-frequency-by-day-of-the-week-and-time-of-day",
    "title": "3  Results",
    "section": "3.2 Graph 2: Crash Frequency by Day of the Week and Time of Day",
    "text": "3.2 Graph 2: Crash Frequency by Day of the Week and Time of Day\nA heatmap to represent the frequency of crashes by day of the week and hour of the day. This can reveal patterns in crash occurrence, suggesting potential countermeasures like increased enforcement or public awareness campaigns during high-risk periods.\n\n\nCode\nlibrary(chron)\nlibrary(lubridate)\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:chron':\n\n    days, hours, minutes, seconds, years\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nCode\ndata2 &lt;- data[c(\"CRASH.DATE\", \"CRASH.TIME\")]\n\n# convert CRASH.DATE column from char to date\ndata2$CRASH.DATE &lt;- as.Date(data2$CRASH.DATE, format = \"%m/%d/%y\")\n#data2$CRASH.TIME &lt;- chron(times = paste(data2$CRASH.TIME, \":00\"))\ndata2$CRASH.TIME &lt;- as.POSIXct(data2$CRASH.TIME, format = \"%H:%M\")\n\n# Extract day of the week and hour of the day\ndata2 &lt;- data2 %&gt;%\n  mutate(DayOfWeek = weekdays(CRASH.DATE),\n         HourOfDay = hour(CRASH.TIME))\n\n# Convert DayOfWeek to factor \ndata2$DayOfWeek &lt;- factor(data2$DayOfWeek, levels = rev(c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\")))\n\n# group by DayOfWeek and HourOfDay to represent\nsummarized_data2 &lt;- data2 %&gt;%\n  group_by(DayOfWeek, HourOfDay) %&gt;%\n  summarise(Frequency = n())\n\n\n`summarise()` has grouped output by 'DayOfWeek'. You can override using the\n`.groups` argument.\n\n\nCode\nsummarized_data2\n\n\n# A tibble: 168 × 3\n# Groups:   DayOfWeek [7]\n   DayOfWeek HourOfDay Frequency\n   &lt;fct&gt;         &lt;int&gt;     &lt;int&gt;\n 1 Sunday            0      9380\n 2 Sunday            1      5064\n 3 Sunday            2      3793\n 4 Sunday            3      3317\n 5 Sunday            4      3698\n 6 Sunday            5      4155\n 7 Sunday            6      6608\n 8 Sunday            7      9063\n 9 Sunday            8     16069\n10 Sunday            9     15235\n# ℹ 158 more rows\n\n\nCode\n# Create a heatmap\nggplot(summarized_data2, aes(y = DayOfWeek, x = HourOfDay, fill= Frequency )) +\n  geom_tile(stat = \"identity\") +\n  scale_fill_viridis_c(trans = \"reverse\") +  \n  labs(title = \"Heatmap for DayOfWeek and HourOfDay\",\n       x = \"Hour of the Day\",\n       y = \"Day of the Week\",\n       fill = \"Frequency\") +\n  theme_minimal()"
  },
  {
    "objectID": "results.html#graph-3",
    "href": "results.html#graph-3",
    "title": "3  Results",
    "section": "3.3 Graph 3:",
    "text": "3.3 Graph 3:\n\n\nCode\n# vehicle type\n\nlength(unique(data$VEHICLE.TYPE.CODE.1))\n\n\n[1] 1593\n\n\nCode\nvehicles &lt;- sort(table(data$VEHICLE.TYPE.CODE.1),decreasing = TRUE)[seq(1,30)]\n# Draw a bar graph of most frequent vehicles\nbarplot(vehicles, \n        main = \"Bar Graph of Most Frequently Involved Vehicles\", \n        xlab = \"Type of Vehicles\", \n        ylab = \"Number of cases\", \n        col = \"skyblue\",\n        names.arg = names(vehicles),\n        las = 2)\n\n\n\n\n\nCode\n# contributing factor\nlength(unique(data$CONTRIBUTING.FACTOR.VEHICLE.1))\n\n\n[1] 62\n\n\nCode\nsort(table(data$CONTRIBUTING.FACTOR.VEHICLE.1), decreasing = TRUE)[seq(1,20)]\n\n\n\n                   Unspecified Driver Inattention/Distraction \n                        699226                         407856 \n Failure to Yield Right-of-Way          Following Too Closely \n                        121060                         109105 \n              Backing Unsafely                Other Vehicular \n                         75798                          63485 \nPassing or Lane Usage Improper            Passing Too Closely \n                         56590                          50706 \n            Turning Improperly                Fatigued/Drowsy \n                         50554                          47370 \n          Unsafe Lane Changing    Traffic Control Disregarded \n                         40223                          36028 \n           Driver Inexperience                   Unsafe Speed \n                         31876                          27897 \n           Alcohol Involvement             Lost Consciousness \n                         22123                          20425 \nReaction to Uninvolved Vehicle              Pavement Slippery \n                         19800                          19418 \n       Prescription Medication        View Obstructed/Limited \n                         15411                          13447"
  },
  {
    "objectID": "results.html#graph-4-stacked-barchart-of-fatality_type-with-percentage-of-person_involved_type",
    "href": "results.html#graph-4-stacked-barchart-of-fatality_type-with-percentage-of-person_involved_type",
    "title": "3  Results",
    "section": "3.4 Graph 4: Stacked Barchart of Fatality_Type with Percentage of Person_Involved_Type",
    "text": "3.4 Graph 4: Stacked Barchart of Fatality_Type with Percentage of Person_Involved_Type\n\n\nCode\nlibrary(tidyr)\n\n\n\nAttaching package: 'tidyr'\n\n\nThe following object is masked from 'package:reshape2':\n\n    smiths\n\n\nCode\n# You can use your entire dataset or filter it based on your analysis needs\ndata4 &lt;- data[c(\"NUMBER.OF.PEDESTRIANS.INJURED\", \"NUMBER.OF.PEDESTRIANS.KILLED\",\n                \"NUMBER.OF.CYCLIST.INJURED\", \"NUMBER.OF.CYCLIST.KILLED\",\n                \"NUMBER.OF.MOTORIST.INJURED\", \"NUMBER.OF.MOTORIST.KILLED\")]\n\n# Pivot longer the columns\ndata4_long &lt;- data4 %&gt;%\n  pivot_longer(\n    cols = starts_with(\"NUMBER.OF.\"),\n    names_to = \"Category\",\n    values_to = \"Count\"\n  ) \n\n# summarizing by group sum\ndata4_summarized &lt;- data4_long %&gt;%\n  group_by(Category) %&gt;%\n  summarise(Count = sum(Count))\n\n# adding new column person_involved and fatality_type with information for the existing data\ndata4_summarized &lt;- data4_summarized %&gt;%\n  mutate(\n    person_involved = gsub(\"NUMBER.OF.(\\\\w+)\\\\.(\\\\w+)\", \"\\\\1\", Category),\n    fatality_type = gsub(\"NUMBER.OF.(\\\\w+)\\\\.(\\\\w+)\", \"\\\\2\", Category)\n  )\n\n# Drop the Category column\ndata4_summarized &lt;- data4_summarized[, c(\"person_involved\", \"fatality_type\", \"Count\")]\n\n# Calculate percentages for each combination of fatality_type and person_involved\ndata4_summarized &lt;- data4_summarized %&gt;%\n  group_by(fatality_type) %&gt;%\n  mutate(percentage = Count / sum(Count))\n\ndata4_summarized\n\n\n# A tibble: 6 × 4\n# Groups:   fatality_type [2]\n  person_involved fatality_type  Count percentage\n  &lt;chr&gt;           &lt;chr&gt;          &lt;int&gt;      &lt;dbl&gt;\n1 CYCLIST         INJURED        54408     0.0879\n2 CYCLIST         KILLED           231     0.0780\n3 MOTORIST        INJURED       450487     0.728 \n4 MOTORIST        KILLED          1231     0.416 \n5 PEDESTRIANS     INJURED       113968     0.184 \n6 PEDESTRIANS     KILLED          1498     0.506 \n\n\nCode\n#create a stacked bar chart\nggplot(data4_summarized, aes(x = fatality_type, y=Count, fill = person_involved)) +\n  geom_bar(position = \"fill\", stat = \"identity\") +\n  geom_text(aes(label = scales::percent(percentage)),\n            position = position_fill(vjust = 0.5),  # Adjust text position\n            show.legend = FALSE) +  # Hide legend for the text\n  labs(title = \"Percent Stacked Bar Chart of Fatalities\",\n       x = \"Fatality Type\",\n       y = \"Percentage\",\n       fill = \"Person Involved\") +\n  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Format y-axis as percentage\n  theme_minimal()"
  }
]